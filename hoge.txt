RUN |4 POETRY_HOME=/opt/poetry USER=vscode GROUP=ccds ENVIRONMENT=DEV /bin/sh -c poetry config virtualenvs.create false     && poetry completions bash | sudo tee -a /etc/bash_completion.d/poetry.bash-completion     && poetry install --no-root && rm -rf ~/.cache/pypoetry # buildkit: 47.9MB
USER vscode: 0B
COPY pyproject.toml poetry.lock* ./ # buildkit: 296B
WORKDIR /poetry_practice: 0B
RUN |4 POETRY_HOME=/opt/poetry USER=vscode GROUP=ccds ENVIRONMENT=DEV /bin/sh -c if ! cat /etc/group | grep -e $GROUP: > /dev/null 2>&1; then groupadd -r $GROUP; fi     && usermod -a -G $GROUP $USER     && umask 0002 && mkdir poetry_practice     && chown -R $USER:$GROUP /poetry_practice # buildkit: 3.41kB
COPY /opt/poetry /opt/poetry # buildkit: 209MB
COPY /root/.cache/pypoetry /home/vscode/.cache/pypoetry # buildkit: 13.6MB
ENV ENVIRONMENT=DEV: 0B
ARG ENVIRONMENT: 0B
ENV PATH=/opt/poetry/bin:/usr/local/share/nvm/current/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/py-utils/bin: 0B     
ARG GROUP=ccds: 0B
ARG USER=vscode: 0B
ARG POETRY_HOME: 0B
RUN |6 INSTALL_ZSH=true UPGRADE_PACKAGES=true USERNAME=vscode USER_UID=1000 USER_GID=1000 NODE_VERSION=none /bin/sh -c rm -rf /tmp/library-scripts # buildkit: 0B     
RUN |6 INSTALL_ZSH=true UPGRADE_PACKAGES=true USERNAME=vscode USER_UID=1000 USER_GID=1000 NODE_VERSION=none /bin/sh -c bash /tmp/library-scripts/node-debian.sh "${NVM_DIR}" "${NODE_VERSION}" "${USERNAME}"     && apt-get clean -y && rm -rf /var/lib/apt/lists/* # buildkit: 8.29MB
ENV NVM_SYMLINK_CURRENT=true PATH=/usr/local/share/nvm/current/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/py-utils/bin: 0B
ENV NVM_DIR=/usr/local/share/nvm: 0B
ARG NODE_VERSION=none: 0B
RUN |5 INSTALL_ZSH=true UPGRADE_PACKAGES=true USERNAME=vscode USER_UID=1000 USER_GID=1000 /bin/sh -c bash /tmp/library-scripts/python-debian.sh "none" "/usr/local" "${PIPX_HOME}" "${USERNAME}"     && apt-get clean -y && rm -rf /var/lib/apt/lists/* # buildkit: 190MB
ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/py-utils/bin: 0B
ENV PIPX_HOME=/usr/local/py-utils PIPX_BIN_DIR=/usr/local/py-utils/bin: 0B
RUN |5 INSTALL_ZSH=true UPGRADE_PACKAGES=true USERNAME=vscode USER_UID=1000 USER_GID=1000 /bin/sh -c apt-get update && export DEBIAN_FRONTEND=noninteractive     && apt-get purge -y imagemagick imagemagick-6-common     && bash /tmp/library-scripts/common-debian.sh "${INSTALL_ZSH}" "${USERNAME}" "${USER_UID}" "${USER_GID}" "${UPGRADE_PACKAGES}" "true" "true"     && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* # buildkit: 97.6MB
ARG USER_GID=1000: 0B
ARG USER_UID=1000: 0B
ARG USERNAME=vscode: 0B
ARG UPGRADE_PACKAGES=true: 0B
ARG INSTALL_ZSH=true: 0B
COPY .devcontainer/library-scripts/*.sh .devcontainer/library-scripts/*.env /tmp/library-scripts/ # buildkit: 39.8kB
/bin/sh -c #(nop)  CMD ["python3"]: 0B
/bin/sh -c set -eux;   wget -O get-pip.py "$PYTHON_GET_PIP_URL";  echo "$PYTHON_GET_PIP_SHA256 *get-pip.py" | sha256sum -c -;   export PYTHONDONTWRITEBYTECODE=1;   python get-pip.py   --disable-pip-version-check   --no-cache-dir   --no-compile   "pip==$PYTHON_PIP_VERSION"   "setuptools==$PYTHON_SETUPTOOLS_VERSION"  ;  rm -f get-pip.py;   pip --version: 10.2MB
/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4: 0B
/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py: 0B
/bin/sh -c #(nop)  ENV PYTHON_SETUPTOOLS_VERSION=58.1.0: 0B
/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=22.0.4: 0B
/bin/sh -c set -eux;  for src in idle3 pydoc3 python3 python3-config; do   dst="$(echo "$src" | tr -d 3)";   [ -s "/usr/local/bin/$src" ];   [ ! -e "/usr/local/bin/$dst" ];   ln -svT "$src" "/usr/local/bin/$dst";  done: 32B
/bin/sh -c set -eux;   wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz";  wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc";  GNUPGHOME="$(mktemp -d)"; export GNUPGHOME;  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$GPG_KEY";  gpg --batch --verify python.tar.xz.asc python.tar.xz;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" python.tar.xz.asc;  mkdir -p /usr/src/python;  tar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz;  rm python.tar.xz;   cd /usr/src/python;  gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-optimizations   --enable-option-checking=fatal   --enable-shared   --with-system-expat   --without-ensurepip  ;  nproc="$(nproc)";  make -j "$nproc"  ;  make install;   bin="$(readlink -ve /usr/local/bin/python3)";  dir="$(dirname "$bin")";  mkdir -p "/usr/share/gdb/auto-load/$dir";  cp -vL Tools/gdb/libpython.py "/usr/share/gdb/auto-load/$bin-gdb.py";   cd /;  rm -rf /usr/src/python;   find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests -o -name idle_test \) \)    -o \( -type f -a \( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' \) \)   \) -exec rm -rf '{}' +  ;   ldconfig;   python3 --version: 56.9MB
/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.9.13: 0B
/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568: 0B
/bin/sh -c set -eux;  apt-get update;  apt-get install -y --no-install-recommends   libbluetooth-dev   tk-dev   uuid-dev  ;  rm -rf /var/lib/apt/lists/*: 18MB        
/bin/sh -c #(nop)  ENV LANG=C.UTF-8: 0B
/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin: 0B
/bin/sh -c set -ex;  apt-get update;  apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libmaxminddb-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )  ;  rm -rf /var/lib/apt/lists/*: 510MB
/bin/sh -c apt-get update && apt-get install -y --no-install-recommends   git   mercurial   openssh-client   subversion     procps  && rm -rf /var/lib/apt/lists/*: 146MB
/bin/sh -c set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi: 17.5MB
/bin/sh -c set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget  ;  rm -rf /var/lib/apt/lists/*: 16.5MB   
/bin/sh -c #(nop)  CMD ["bash"]: 0B
/bin/sh -c #(nop) ADD file:647206e0e9c1daa306e4ebbdc26c3ef1840dd316ba4ffea905d17b0858e58e34 in / : 114MB
